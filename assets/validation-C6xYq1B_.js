const n=(r,e=0)=>typeof r=="number"&&!isNaN(r)&&r>=e;function c(r){const e={};return r.name?.trim()||(e.name="Product name is required"),r.category?.trim()||(e.category="Category is required"),r.currentStock!==void 0&&!n(parseFloat(r.currentStock),0)&&(e.currentStock="Current stock must be a non-negative number"),r.costPerUnit!==void 0&&!n(parseFloat(r.costPerUnit),0)&&(e.costPerUnit="Cost per unit must be a non-negative number"),{isValid:Object.keys(e).length===0,errors:e}}function o(r){const e={};return r.reason?.trim()?r.reason.trim().length<3&&(e.reason="Reason must be at least 3 characters long"):e.reason="Reason for price adjustment is required",r.adjustedBy?.trim()||(e.adjustedBy="Name of person making adjustment is required"),r.productAdjustments&&r.productAdjustments.forEach((i,s)=>{const t=`adjustment_${s}`;!i.newPricePerKg||isNaN(parseFloat(i.newPricePerKg))?e[`${t}_price`]="Valid new price is required":parseFloat(i.newPricePerKg)<0?e[`${t}_price`]="Price cannot be negative":parseFloat(i.newPricePerKg)===parseFloat(i.oldPricePerKg)&&(e[`${t}_price`]="New price must be different from current price")}),{isValid:Object.keys(e).length===0,errors:e}}export{c as a,o as v};
